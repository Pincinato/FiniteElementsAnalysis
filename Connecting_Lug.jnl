# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models.changeKey(fromName='Model-1', toName='Connecting_Lug')
mdb.models['Connecting_Lug'].ConstrainedSketch(name='__profile__', sheetSize=
    0.25)
mdb.models['Connecting_Lug'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Connecting_Lug'].sketches['__profile__'].Line(point1=(-0.05625, 
    0.01), point2=(-0.01375, 0.0175))
mdb.models['Connecting_Lug'].sketches['__profile__'].Line(point1=(-0.01375, 
    0.0175), point2=(200.0, 0.0))
mdb.models['Connecting_Lug'].sketches['__profile__'].undo()
mdb.models['Connecting_Lug'].sketches['__profile__'].undo()
mdb.models['Connecting_Lug'].sketches['__profile__'].rectangle(point1=(-0.075, 
    0.01875), point2=(-0.04875, -0.00625))
mdb.models['Connecting_Lug'].sketches['__profile__'].undo()
mdb.models['Connecting_Lug'].sketches['__profile__'].rectangle(point1=(-0.085, 
    0.0), point2=(-0.015, -0.03))
# Save by fe1 on 2018_03_19-09.16.31; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_19-09.20.09; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].sketches['__profile__'].undo()
mdb.models['Connecting_Lug'].sketches['__profile__'].redo()
del mdb.models['Connecting_Lug'].sketches['__profile__']
mdb.models['Connecting_Lug'].ConstrainedSketch(name='__profile__', sheetSize=
    0.25)
mdb.models['Connecting_Lug'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Connecting_Lug'].sketches['__profile__'].rectangle(point1=(-0.1, 
    -0.00375), point2=(-0.03875, -0.035))
# Save by fe1 on 2018_03_19-09.25.26; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_19-09.25.39; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].Part(dimensionality=THREE_D, name='Connecting Lug'
    , type=DEFORMABLE_BODY)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].BaseSolidExtrude(depth=
    0.025, sketch=mdb.models['Connecting_Lug'].sketches['__profile__'])
del mdb.models['Connecting_Lug'].sketches['__profile__']
mdb.models['Connecting_Lug'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'].sketch)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['Connecting_Lug'].sketches['__edit__'], upToFeature=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'])
mdb.models['Connecting_Lug'].sketches['__edit__'].delete(objectList=(
    mdb.models['Connecting_Lug'].sketches['__edit__'].geometry[4], ))
mdb.models['Connecting_Lug'].sketches['__edit__'].EqualLengthConstraint(
    entity1=mdb.models['Connecting_Lug'].sketches['__edit__'].geometry[5], 
    entity2=mdb.models['Connecting_Lug'].sketches['__edit__'].geometry[3])
mdb.models['Connecting_Lug'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.0, 0.0), value=0.08, vertex1=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[0])
mdb.models['Connecting_Lug'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.1, 0.0), value=0.1, vertex1=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[0])
mdb.models['Connecting_Lug'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.1, 0.0), value=0.1, vertex1=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[0])
mdb.models['Connecting_Lug'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.05, 0.0), value=0.05, vertex1=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[1])
# Save by fe1 on 2018_03_19-09.38.59; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.0101477969437838, 0.0152019504457712), value=0.1, vertex1=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[0])
mdb.models['Connecting_Lug'].sketches['__edit__'].delete(objectList=(
    mdb.models['Connecting_Lug'].sketches['__edit__'].dimensions[2], ))
mdb.models['Connecting_Lug'].sketches['__edit__'].delete(objectList=(
    mdb.models['Connecting_Lug'].sketches['__edit__'].dimensions[1], ))
mdb.models['Connecting_Lug'].sketches['__edit__'].delete(objectList=(
    mdb.models['Connecting_Lug'].sketches['__edit__'].dimensions[0], ))
mdb.models['Connecting_Lug'].sketches['__edit__'].Arc3Points(point1=(0.0, 
    0.015), point2=(0.0, -0.035), point3=(0.02125, -0.00875))
# Save by fe1 on 2018_03_19-09.47.48; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Connecting_Lug'].sketches['__edit__'].geometry[5], entity2=
    mdb.models['Connecting_Lug'].sketches['__edit__'].geometry[6])
mdb.models['Connecting_Lug'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Connecting_Lug'].sketches['__edit__'].geometry[3], entity2=
    mdb.models['Connecting_Lug'].sketches['__edit__'].geometry[6])
# Save by fe1 on 2018_03_19-09.49.52; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].sketches['__edit__'].CircleByCenterPerimeter(
    center=(0.0, -0.00875), point1=(0.00875, -0.0225))
mdb.models['Connecting_Lug'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.015, 0.0), value=0.015, vertex1=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[5], vertex2=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[6])
mdb.models['Connecting_Lug'].sketches['__edit__'].ConcentricConstraint(entity1=
    mdb.models['Connecting_Lug'].sketches['__edit__'].vertices[5], entity2=
    mdb.models['Connecting_Lug'].sketches['__edit__'].geometry[6])
# Save by fe1 on 2018_03_19-09.54.01; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Connecting_Lug'].sketches['__edit__'])
del mdb.models['Connecting_Lug'].sketches['__edit__']
mdb.models['Connecting_Lug'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'].sketch)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['Connecting_Lug'].sketches['__edit__'], upToFeature=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'])
del mdb.models['Connecting_Lug'].sketches['__edit__']
mdb.models['Connecting_Lug'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'].sketch)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['Connecting_Lug'].sketches['__edit__'], upToFeature=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'])
del mdb.models['Connecting_Lug'].sketches['__edit__']
mdb.models['Connecting_Lug'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'].sketch)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['Connecting_Lug'].sketches['__edit__'], upToFeature=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'])
mdb.models['Connecting_Lug'].ConstrainedSketch(name='Connecting_Lug', 
    objectToCopy=mdb.models['Connecting_Lug'].sketches['__edit__'])
del mdb.models['Connecting_Lug'].sketches['__edit__']
mdb.models['Connecting_Lug'].parts['Connecting Lug'].regenerate()
# Save by fe1 on 2018_03_19-10.00.01; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_19-10.00.15; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_19-10.00.22; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_19-10.00.23; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'].setValues(
    depth=0.02)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].regenerate()
mdb.models['Connecting_Lug'].parts['Connecting Lug'].regenerate()
# Save by fe1 on 2018_03_19-10.03.54; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_19-10.04.54; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'].sketch)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['Connecting_Lug'].sketches['__edit__'], upToFeature=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'])
del mdb.models['Connecting_Lug'].sketches['__edit__']
mdb.models['Connecting_Lug'].Material(name='Steel')
mdb.models['Connecting_Lug'].materials['Steel'].Elastic(table=((2e-07, 0.3), ))
mdb.models['Connecting_Lug'].HomogeneousSolidSection(material='Steel', name=
    'LugSection', thickness=None)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].Set(cells=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-1')
mdb.models['Connecting_Lug'].parts['Connecting Lug'].SectionAssignment(offset=
    0.0, offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].sets['Set-1'], 
    sectionName='LugSection', thicknessAssignment=FROM_SECTION)
# Save by fe1 on 2018_03_26-08.11.29; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-08.11.33; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Connecting_Lug'].rootAssembly.Instance(dependent=ON, name=
    'Connecting Lug-1', part=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'])
# Save by fe1 on 2018_03_26-08.14.23; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].StaticStep(description='lugload', name='LugLoad', 
    previous='Initial')
mdb.models['Connecting_Lug'].fieldOutputRequests['F-Output-1'].setValues(
    variables=('PE', 'PEEQ', 'PEMAG', 'LE', 'RF', 'RT', 'RM', 'CF', 'SF', 'TF', 
    'VF', 'ESF1', 'NFORC', 'NFORCSO', 'RBFOR', 'BF', 'CORIOMAG', 'ROTAMAG', 
    'CENTMAG', 'CENTRIFMAG', 'GRAV', 'P', 'HP', 'TRSHR', 'TRNOR', 'CSTRESS', 
    'CSTRESSETOS', 'CLINELOAD', 'CPOINTLOAD', 'CDSTRESS', 'CDISP', 'CDISPETOS', 
    'CTANDIR', 'CFORCE', 'CNAREA', 'CSTATUS', 'PPRESS'))
mdb.models['Connecting_Lug'].fieldOutputRequests['F-Output-1'].setValues(
    variables=('E', 'VE', 'PE', 'VEEQ', 'PEEQ', 'PEEQT', 'PEEQMAX', 'PEMAG', 
    'PEQC', 'EE', 'IE', 'THE', 'NE', 'LE', 'ER', 'SE', 'SPE', 'SEPE', 'SEE', 
    'SEP', 'SALPHA', 'RF', 'RT', 'RM', 'CF', 'SF', 'TF', 'VF', 'ESF1', 'NFORC', 
    'NFORCSO', 'RBFOR', 'BF', 'CORIOMAG', 'ROTAMAG', 'CENTMAG', 'CENTRIFMAG', 
    'GRAV', 'P', 'HP', 'TRSHR', 'TRNOR', 'CSTRESS', 'CSTRESSETOS', 'CLINELOAD', 
    'CPOINTLOAD', 'CDSTRESS', 'CDISP', 'CDISPETOS', 'CTANDIR', 'CFORCE', 
    'CNAREA', 'CSTATUS', 'PPRESS'))
mdb.models['Connecting_Lug'].fieldOutputRequests['F-Output-1'].setValues(
    variables=('BF', 'CDISP', 'CDISPETOS', 'CDSTRESS', 'CENTMAG', 'CENTRIFMAG', 
    'CFORCE', 'CLINELOAD', 'CNAREA', 'CORIOMAG', 'CPOINTLOAD', 'CSTATUS', 
    'CSTRESS', 'CSTRESSETOS', 'CTANDIR', 'E', 'EE', 'ER', 'ESF1', 'GRAV', 'HP', 
    'IE', 'LE', 'NE', 'NFORC', 'NFORCSO', 'P', 'PE', 'PEEQ', 'PEEQMAX', 
    'PEEQT', 'PEMAG', 'PEQC', 'PPRESS', 'RBFOR', 'RF', 'RM', 'ROTAMAG', 'RT', 
    'SALPHA', 'SE', 'SEE', 'SEP', 'SEPE', 'SF', 'SPE', 'TF', 'THE', 'TRNOR', 
    'TRSHR', 'VE', 'VEEQ', 'VF'))
# Save by fe1 on 2018_03_26-08.25.05; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].rootAssembly.Set(edges=
    mdb.models['Connecting_Lug'].rootAssembly.instances['Connecting Lug-1'].edges.getSequenceFromMask(
    ('[#100 ]', ), ), name='Set-1')
mdb.models['Connecting_Lug'].EncastreBC(createStepName='LugLoad', localCsys=
    None, name='FixLeftEnd', region=
    mdb.models['Connecting_Lug'].rootAssembly.sets['Set-1'])
mdb.models['Connecting_Lug'].boundaryConditions['FixLeftEnd'].setValues(region=
    mdb.models['Connecting_Lug'].rootAssembly.instances['Connecting Lug-1'].sets['Set-1'])
del mdb.models['Connecting_Lug'].boundaryConditions['FixLeftEnd']
mdb.models['Connecting_Lug'].rootAssembly.Set(faces=
    mdb.models['Connecting_Lug'].rootAssembly.instances['Connecting Lug-1'].faces.getSequenceFromMask(
    ('[#4 ]', ), ), name='Set-2')
mdb.models['Connecting_Lug'].EncastreBC(createStepName='LugLoad', localCsys=
    None, name='FixLeftEnd', region=
    mdb.models['Connecting_Lug'].rootAssembly.sets['Set-2'])
# Save by fe1 on 2018_03_26-08.33.22; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-08.33.24; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-08.35.54; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-08.35.55; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'].sketch)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['Connecting_Lug'].sketches['__edit__'], upToFeature=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Solid extrude-1'])
del mdb.models['Connecting_Lug'].sketches['__edit__']
mdb.models['Connecting_Lug'].parts['Connecting Lug'].regenerate()
mdb.models['Connecting_Lug'].parts['Connecting Lug'].PartitionCellByPlaneThreePoints(
    cells=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].vertices[8], point2=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].vertices[9], point3=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].InterestingPoint(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].edges[12], MIDDLE))
del mdb.models['Connecting_Lug'].parts['Connecting Lug'].features['Partition cell-1']
# Save by fe1 on 2018_03_26-09.52.05; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].parts['Connecting Lug'].PartitionCellByPlaneThreePoints(
    cells=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].InterestingPoint(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].edges[0], MIDDLE), 
    point2=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].InterestingPoint(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].edges[0], CENTER), 
    point3=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].InterestingPoint(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].edges[2], MIDDLE))
# Save by fe1 on 2018_03_26-09.53.06; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].rootAssembly.regenerate()
mdb.models['Connecting_Lug'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Connecting_Lug'].rootAssembly.instances['Connecting Lug-1'].faces.getSequenceFromMask(
    ('[#800 ]', ), ))
mdb.models['Connecting_Lug'].Pressure(amplitude=UNSET, createStepName='LugLoad'
    , distributionType=UNIFORM, field='', magnitude=50000000.0, name=
    'PressureLoad', region=
    mdb.models['Connecting_Lug'].rootAssembly.surfaces['Surf-1'])
# Save by fe1 on 2018_03_26-09.55.17; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-09.55.22; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-09.59.47; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-09.59.48; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-09.59.59; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-10.00.00; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-10.00.00; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-10.02.14; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].parts['Connecting Lug'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#3 ]', ), ), ))
mdb.models['Connecting_Lug'].parts['Connecting Lug'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#3 ]', ), ), ))
mdb.models['Connecting_Lug'].parts['Connecting Lug'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#3 ]', ), ), ))
mdb.models['Connecting_Lug'].parts['Connecting Lug'].PartitionCellByPlaneThreePoints(
    cells=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#3 ]', ), ), point1=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].vertices[14], point2=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].vertices[8], point3=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].vertices[15])
# Save by fe1 on 2018_03_26-15.55.51; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-15.55.51; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-16.03.26; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-16.03.27; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-16.03.28; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].rootAssembly.regenerate()
mdb.models['Connecting_Lug'].parts['Connecting Lug'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#f ]', ), ), ))
# Save by fe1 on 2018_03_26-21.32.26; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].parts['Connecting Lug'].seedPart(deviationFactor=
    0.1, minSizeFactor=0.1, size=0.0084)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].generateMesh()
mdb.models['Connecting_Lug'].parts['Connecting Lug'].DatumPointByOffset(point=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].vertices[19], vector=(
    0.0, 0.0, 0.0))
mdb.models['Connecting_Lug'].parts['Connecting Lug'].DatumPointByOffset(point=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].datums[11], vector=(
    0.075, 0.0, 0.0))
mdb.models['Connecting_Lug'].parts['Connecting Lug'].deleteFeatures((
    'Datum pt-1', 'Datum pt-2'))
mdb.models['Connecting_Lug'].parts['Connecting Lug'].DatumPointByOffset(point=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].vertices[19], vector=(
    0.075, 0.0, 0.0))
mdb.models['Connecting_Lug'].parts['Connecting Lug'].deleteMesh(regions=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#f ]', ), ))
mdb.models['Connecting_Lug'].parts['Connecting Lug'].PartitionCellByPlanePointNormal(
    cells=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#c ]', ), ), normal=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].edges[37], point=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].InterestingPoint(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].edges[31], MIDDLE))
# Save by fe1 on 2018_03_26-21.41.32; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-21.41.32; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].parts['Connecting Lug'].seedPart(deviationFactor=
    0.1, minSizeFactor=0.1, size=0.007)
mdb.models['Connecting_Lug'].parts['Connecting Lug'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#3f ]', ), ), ))
mdb.models['Connecting_Lug'].parts['Connecting Lug'].setElementType(elemTypes=(
    ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Connecting_Lug'].parts['Connecting Lug'].cells.getSequenceFromMask(
    ('[#3f ]', ), ), ))
mdb.models['Connecting_Lug'].parts['Connecting Lug'].generateMesh()
# Save by fe1 on 2018_03_26-21.47.29; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Connecting_Lug'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='job for lug', echoPrint=OFF
    , explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Connecting_Lug', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Lug', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Lug'].submit(consistencyChecking=OFF)
# Save by fe1 on 2018_03_26-21.49.29; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-21.49.29; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Lug']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Lug.inp", line 2933: Unknown assembly node set SET-2', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(HEADING, {'phase': BATCHPRE_PHASE, 
    'heading': 'job for lug', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACE DEFINITION ASSEMBLY_SURF-1 NOT FOUND.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-2 HAS NOT BEEN DEFINED', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SURFACE ASSEMBLY_SURF-1 HAS NOT BEEN LOCATED', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VF IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-2 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-2 HAS NOT BEEN DEFINED', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Lug.odb', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.jobs['Lug'].submit(consistencyChecking=OFF)
mdb.jobs['Lug']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Lug.inp", line 2933: Unknown assembly node set SET-2', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(HEADING, {'phase': BATCHPRE_PHASE, 
    'heading': 'job for lug', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACE DEFINITION ASSEMBLY_SURF-1 NOT FOUND.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-2 HAS NOT BEEN DEFINED', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SURFACE ASSEMBLY_SURF-1 HAS NOT BEEN LOCATED', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VF IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_SET-2 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_SET-2 HAS NOT BEEN DEFINED', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Lug.odb', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
del mdb.models['Connecting_Lug'].rootAssembly.sets['Set-1']
del mdb.models['Connecting_Lug'].rootAssembly.sets['Set-2']
del mdb.models['Connecting_Lug'].boundaryConditions['FixLeftEnd']
mdb.models['Connecting_Lug'].rootAssembly.Set(faces=
    mdb.models['Connecting_Lug'].rootAssembly.instances['Connecting Lug-1'].faces.getSequenceFromMask(
    ('[#4000000 ]', ), ), name='Set-1')
mdb.models['Connecting_Lug'].EncastreBC(createStepName='LugLoad', localCsys=
    None, name='FixLeftEnd', region=
    mdb.models['Connecting_Lug'].rootAssembly.sets['Set-1'])
mdb.models['Connecting_Lug'].rootAssembly.Set(faces=
    mdb.models['Connecting_Lug'].rootAssembly.instances['Connecting Lug-1'].faces.getSequenceFromMask(
    ('[#200000 ]', ), ), name='Set-2')
mdb.models['Connecting_Lug'].EncastreBC(createStepName='LugLoad', localCsys=
    None, name='FixLeftEnd2', region=
    mdb.models['Connecting_Lug'].rootAssembly.sets['Set-2'])
mdb.jobs['Lug'].submit(consistencyChecking=OFF)
mdb.jobs['Lug']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(HEADING, {'phase': BATCHPRE_PHASE, 
    'heading': 'job for lug', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACE DEFINITION ASSEMBLY_SURF-1 NOT FOUND.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SURFACE ASSEMBLY_SURF-1 HAS NOT BEEN LOCATED', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VF IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Lug.odb', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.models['Connecting_Lug'].rootAssembly.Instance(dependent=ON, name=
    'Connecting Lug-2', part=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'])
mdb.models['Connecting_Lug'].rootAssembly.Instance(dependent=ON, name=
    'Connecting Lug-3', part=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'])
mdb.models['Connecting_Lug'].rootAssembly.Instance(dependent=ON, name=
    'Connecting Lug-4', part=
    mdb.models['Connecting_Lug'].parts['Connecting Lug'])
mdb.jobs['Lug'].submit(consistencyChecking=OFF)
mdb.jobs['Lug']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(HEADING, {'phase': BATCHPRE_PHASE, 
    'heading': 'job for lug', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACE DEFINITION ASSEMBLY_SURF-1 NOT FOUND.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE SURFACE ASSEMBLY_SURF-1 HAS NOT BEEN LOCATED', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VF IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Lug.odb', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
del mdb.models['Connecting_Lug'].rootAssembly.features['Connecting Lug-4']
del mdb.models['Connecting_Lug'].rootAssembly.features['Connecting Lug-3']
del mdb.models['Connecting_Lug'].rootAssembly.features['Connecting Lug-2']
mdb.models['Connecting_Lug'].rootAssembly.Surface(name='Surf-1', side1Faces=
    mdb.models['Connecting_Lug'].rootAssembly.instances['Connecting Lug-1'].faces.getSequenceFromMask(
    ('[#7fb9f8fc ]', ), ))
mdb.jobs['Lug'].submit(consistencyChecking=OFF)
mdb.jobs['Lug']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(HEADING, {'phase': BATCHPRE_PHASE, 
    'heading': 'job for lug', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VF IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Lug.odb', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(STEP, {'stepName': 'lugload', 'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Lug', 'memory': 51.0})
mdb.jobs['Lug']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Lug', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Lug']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(JOB_COMPLETED, {'time': 'Mon Mar 26 22:02:59 2018', 
    'jobName': 'Lug'})
# Save by fe1 on 2018_03_26-22.05.30; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Connecting_Lug'].loads['PressureLoad']
mdb.models['Connecting_Lug'].rootAssembly.Surface(name='Surf-2', side1Faces=
    mdb.models['Connecting_Lug'].rootAssembly.instances['Connecting Lug-1'].faces.getSequenceFromMask(
    ('[#10004000 ]', ), ))
mdb.models['Connecting_Lug'].Pressure(amplitude=UNSET, createStepName='LugLoad'
    , distributionType=UNIFORM, field='', magnitude=50000000.0, name=
    'PressureLoad', region=
    mdb.models['Connecting_Lug'].rootAssembly.surfaces['Surf-2'])
mdb.jobs['Lug'].submit(consistencyChecking=OFF)
mdb.jobs['Lug']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(HEADING, {'phase': BATCHPRE_PHASE, 
    'heading': 'job for lug', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VF IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Lug.odb', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(STEP, {'stepName': 'lugload', 'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Lug', 'memory': 51.0})
mdb.jobs['Lug']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Lug', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Lug']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(JOB_COMPLETED, {'time': 'Mon Mar 26 22:12:32 2018', 
    'jobName': 'Lug'})
mdb.models['Connecting_Lug'].loads['PressureLoad'].setValues(distributionType=
    TOTAL_FORCE, magnitude=5e+70)
mdb.jobs['Lug'].submit(consistencyChecking=OFF)
mdb.jobs['Lug']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(HEADING, {'phase': BATCHPRE_PHASE, 
    'heading': 'job for lug', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THIS FLOATING POINT VALUE (5.30508E+73) IS TOO LARGE; ITS ABSOLUTE VALUE MUST BE STRICTLY LESS THAN 1.00000E+36 ON THIS MACHINE.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VF IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Lug.odb', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.models['Connecting_Lug'].loads['PressureLoad'].setValues(magnitude=5e+35)
mdb.jobs['Lug'].submit(consistencyChecking=OFF)
mdb.jobs['Lug']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(HEADING, {'phase': BATCHPRE_PHASE, 
    'heading': 'job for lug', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THIS FLOATING POINT VALUE (5.30508E+38) IS TOO LARGE; ITS ABSOLUTE VALUE MUST BE STRICTLY LESS THAN 1.00000E+36 ON THIS MACHINE.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VF IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Lug.odb', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.jobs['Lug'].submit(consistencyChecking=OFF)
mdb.jobs['Lug']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(HEADING, {'phase': BATCHPRE_PHASE, 
    'heading': 'job for lug', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THIS FLOATING POINT VALUE (5.30508E+38) IS TOO LARGE; ITS ABSOLUTE VALUE MUST BE STRICTLY LESS THAN 1.00000E+36 ON THIS MACHINE.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VF IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Lug.odb', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Lug'})
mdb.models['Connecting_Lug'].loads['PressureLoad'].setValues(magnitude=5e+30)
mdb.jobs['Lug'].submit(consistencyChecking=OFF)
mdb.jobs['Lug']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(HEADING, {'phase': BATCHPRE_PHASE, 
    'heading': 'job for lug', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VF IS NOT AVAILABLE FOR THIS TYPE OF ANALYSIS', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST LE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'STRAIN OUTPUT REQUEST NE IS NOT VALID FOR SOME ELEMENTS IN THIS ANALYSIS. THIS REQUEST IS SWITCHED TO THE STRAIN MEASURE, E.', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SPE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VE IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST VEEQ IS NOT AVAILABLE FOR THE MATERIAL FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST ESF1 IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SALPHA IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEE IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SEP IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SF IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST NFORCSO IS NOT AVAILABLE FOR ELEMENT TYPE C3D20R', 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Lug.odb', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(STEP, {'stepName': 'lugload', 'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Lug', 'memory': 51.0})
mdb.jobs['Lug']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Lug', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Lug']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Lug'})
mdb.jobs['Lug']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Lug'})
mdb.jobs['Lug']._Message(JOB_COMPLETED, {'time': 'Mon Mar 26 22:29:05 2018', 
    'jobName': 'Lug'})
# Save by fe1 on 2018_03_26-22.31.33; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-22.31.33; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-22.31.34; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_03_26-22.31.34; build 2016 2015_09_24-22.31.09 126547
