# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(modelType=STANDARD_EXPLICIT, name='Assignment1')
del mdb.models['Model-1']
mdb.models['Assignment1'].ConstrainedSketch(name='__profile__', sheetSize=
    300.0)
mdb.models['Assignment1'].sketches['__profile__'].rectangle(point1=(-100.0, 
    -5.0), point2=(40.0, -15.0))
# Save by fe1 on 2018_04_09-09.11.27; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.12.13; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].sketches['__profile__'].EqualLengthConstraint(
    entity1=mdb.models['Assignment1'].sketches['__profile__'].geometry[5], 
    entity2=mdb.models['Assignment1'].sketches['__profile__'].geometry[3])
mdb.models['Assignment1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    300.0, 0.0), value=300.0, vertex1=
    mdb.models['Assignment1'].sketches['__profile__'].vertices[3], vertex2=
    mdb.models['Assignment1'].sketches['__profile__'].vertices[0])
mdb.models['Assignment1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    -118.67374420166, -11.3471059799194), value=10.0, vertex1=
    mdb.models['Assignment1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Assignment1'].sketches['__profile__'].vertices[1])
# Save by fe1 on 2018_04_09-09.17.04; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.18.37; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.18.38; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].Part(dimensionality=TWO_D_PLANAR, name=
    'PartAssignment1', type=DEFORMABLE_BODY)
mdb.models['Assignment1'].parts['PartAssignment1'].BaseShell(sketch=
    mdb.models['Assignment1'].sketches['__profile__'])
del mdb.models['Assignment1'].sketches['__profile__']
# Save by fe1 on 2018_04_09-09.20.12; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].Material(name='steel')
mdb.models['Assignment1'].materials['steel'].Elastic(table=((90000000000.0, 
    0.3), ))
mdb.models['Assignment1'].HomogeneousSolidSection(material='steel', name=
    'SectionAssignment1', thickness=None)
mdb.models['Assignment1'].parts['PartAssignment1'].Set(faces=
    mdb.models['Assignment1'].parts['PartAssignment1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-1')
mdb.models['Assignment1'].parts['PartAssignment1'].SectionAssignment(offset=0.0
    , offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Assignment1'].parts['PartAssignment1'].sets['Set-1'], 
    sectionName='SectionAssignment1', thicknessAssignment=FROM_SECTION)
# Save by fe1 on 2018_04_09-09.30.09; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.10; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.10; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.10; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.10; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.10; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.11; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.11; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.11; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.12; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.12; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.30.12; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Assignment1'].rootAssembly.Instance(dependent=ON, name=
    'PartAssignment1-1', part=
    mdb.models['Assignment1'].parts['PartAssignment1'])
mdb.models['Assignment1'].sections['SectionAssignment1'].setValues(material=
    'steel', thickness=5.0)
# Save by fe1 on 2018_04_09-09.33.29; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].StaticStep(description='load of assignment1', name=
    'Load', previous='Initial')
mdb.models['Assignment1'].steps['Initial'].suppress()
#* The Initial step cannot be suppressed.
mdb.models['Assignment1'].fieldOutputRequests['F-Output-1'].setValues(
    variables=('S', 'U', 'RF'))
# Save by fe1 on 2018_04_09-09.38.13; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.38.13; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.38.13; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.38.14; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.38.14; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.38.14; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.38.15; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.38.15; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].rootAssembly.Set(edges=
    mdb.models['Assignment1'].rootAssembly.instances['PartAssignment1-1'].edges.getSequenceFromMask(
    ('[#2 ]', ), ), name='Set-1')
mdb.models['Assignment1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='FixLeftEnd', region=
    mdb.models['Assignment1'].rootAssembly.sets['Set-1'])
# Save by fe1 on 2018_04_09-09.42.28; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.45.06; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].rootAssembly.Set(name='Set-2', vertices=
    mdb.models['Assignment1'].rootAssembly.instances['PartAssignment1-1'].vertices.getSequenceFromMask(
    ('[#8 ]', ), ))
mdb.models['Assignment1'].ConcentratedForce(cf2=-50.0, createStepName='Load', 
    distributionType=UNIFORM, field='', localCsys=None, name='Load-1', region=
    mdb.models['Assignment1'].rootAssembly.sets['Set-2'])
# Save by fe1 on 2018_04_09-09.46.46; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.46.47; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.46.48; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.47.24; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.47.52; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.47.55; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.47.56; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.47.56; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.47.56; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.47.56; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.47.56; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.47.56; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-09.47.57; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].parts['PartAssignment1'].setElementType(elemTypes=(
    ElemType(elemCode=CPS8, elemLibrary=STANDARD), ElemType(elemCode=CPS6M, 
    elemLibrary=STANDARD, secondOrderAccuracy=OFF, distortionControl=DEFAULT)), 
    regions=(
    mdb.models['Assignment1'].parts['PartAssignment1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Assignment1'].parts['PartAssignment1'].seedEdgeByNumber(constraint=
    FIXED, edges=
    mdb.models['Assignment1'].parts['PartAssignment1'].edges.getSequenceFromMask(
    ('[#f ]', ), ), number=12)
mdb.models['Assignment1'].parts['PartAssignment1'].seedEdgeByNumber(constraint=
    FIXED, edges=
    mdb.models['Assignment1'].parts['PartAssignment1'].edges.getSequenceFromMask(
    ('[#2 ]', ), ), number=2)
mdb.models['Assignment1'].parts['PartAssignment1'].setElementType(elemTypes=(
    ElemType(elemCode=CPS8, elemLibrary=STANDARD), ElemType(elemCode=CPS6M, 
    elemLibrary=STANDARD, secondOrderAccuracy=OFF, distortionControl=DEFAULT)), 
    regions=(
    mdb.models['Assignment1'].parts['PartAssignment1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Assignment1'].parts['PartAssignment1'].generateMesh()
mdb.models['Assignment1'].parts['PartAssignment1'].deleteMesh(regions=
    mdb.models['Assignment1'].parts['PartAssignment1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Assignment1'].parts['PartAssignment1'].seedEdgeByNumber(constraint=
    FIXED, edges=
    mdb.models['Assignment1'].parts['PartAssignment1'].edges.getSequenceFromMask(
    ('[#8 ]', ), ), number=2)
mdb.models['Assignment1'].parts['PartAssignment1'].generateMesh()
# Save by fe1 on 2018_04_09-10.00.22; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-10.00.25; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].parts['PartAssignment1'].setElementType(elemTypes=(
    ElemType(elemCode=CPS4, elemLibrary=STANDARD), ElemType(elemCode=CPS3, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['Assignment1'].parts['PartAssignment1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Assignment1'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Assignment1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='CPS4_2_12', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['CPS4_2_12'].submit(consistencyChecking=OFF)
mdb.jobs['CPS4_2_12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'CPS4_2_12'})
mdb.jobs['CPS4_2_12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'CPS4_2_12'})
mdb.jobs['CPS4_2_12']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/CPS4_2_12.odb', 'jobName': 'CPS4_2_12'})
mdb.jobs['CPS4_2_12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'CPS4_2_12'})
mdb.jobs['CPS4_2_12']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'CPS4_2_12'})
mdb.jobs['CPS4_2_12']._Message(STEP, {'stepName': 'load of assignment1', 
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'CPS4_2_12'})
mdb.jobs['CPS4_2_12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'CPS4_2_12'})
mdb.jobs['CPS4_2_12']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'CPS4_2_12', 'memory': 24.0})
mdb.jobs['CPS4_2_12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'CPS4_2_12'})
mdb.jobs['CPS4_2_12']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'CPS4_2_12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['CPS4_2_12']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'CPS4_2_12'})
mdb.jobs['CPS4_2_12']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'CPS4_2_12'})
mdb.jobs['CPS4_2_12']._Message(JOB_COMPLETED, {
    'time': 'Mon Apr  9 10:02:46 2018', 'jobName': 'CPS4_2_12'})
# Save by fe1 on 2018_04_09-10.03.43; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_09-10.03.43; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_12-18.49.51; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].rootAssembly.Set(name='Set-3', vertices=
    mdb.models['Assignment1'].rootAssembly.instances['PartAssignment1-1'].vertices.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Assignment1'].ConcentratedForce(cf2=-25.0, createStepName='Load', 
    distributionType=UNIFORM, field='', localCsys=None, name='Load-2', region=
    mdb.models['Assignment1'].rootAssembly.sets['Set-3'])
mdb.models['Assignment1'].loads['Load-1'].setValues(cf2=-25.0, 
    distributionType=UNIFORM, field='')
mdb.models['Assignment1'].materials['steel'].elastic.setValues(table=((90000.0, 
    0.3), ))
# Save by fe1 on 2018_04_12-19.06.22; build 2016 2015_09_24-22.31.09 126547
# Save by fe1 on 2018_04_12-19.06.55; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['CPS4_2_12'].submit(consistencyChecking=OFF)
# Save by fe1 on 2018_04_12-19.07.17; build 2016 2015_09_24-22.31.09 126547
