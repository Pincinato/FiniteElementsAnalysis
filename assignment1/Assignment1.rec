# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Assignment1'].parts['PartAssignment1'].setElementType(elemTypes=(
    ElemType(elemCode=CPS8, elemLibrary=STANDARD), ElemType(elemCode=CPS6M, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['Assignment1'].parts['PartAssignment1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Assignment1'].parts['PartAssignment1'].generateMesh()
mdb.models['Assignment1'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Assignment1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='CPS8_2_12', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['CPS8_2_12'].submit(consistencyChecking=OFF)
mdb.jobs['CPS8_2_12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'CPS8_2_12'})
mdb.jobs['CPS8_2_12']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'CPS8_2_12'})
mdb.jobs['CPS8_2_12']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/Desktop/FiniteElementsAnalysis/assignment1/CPS8_2_12/CPS8_2_12.odb', 
    'jobName': 'CPS8_2_12'})
mdb.jobs['CPS8_2_12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'CPS8_2_12'})
mdb.jobs['CPS8_2_12']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'CPS8_2_12'})
mdb.jobs['CPS8_2_12']._Message(STEP, {'stepName': 'load of assignment1', 
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'CPS8_2_12'})
mdb.jobs['CPS8_2_12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'CPS8_2_12'})
mdb.jobs['CPS8_2_12']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'CPS8_2_12', 'memory': 24.0})
mdb.jobs['CPS8_2_12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'CPS8_2_12'})
mdb.jobs['CPS8_2_12']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'CPS8_2_12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['CPS8_2_12']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'CPS8_2_12'})
mdb.jobs['CPS8_2_12']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'CPS8_2_12'})
mdb.jobs['CPS8_2_12']._Message(JOB_COMPLETED, {
    'time': 'Thu Apr 12 20:30:23 2018', 'jobName': 'CPS8_2_12'})
